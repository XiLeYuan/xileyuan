apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
android {

    viewBinding {
        enabled = true
    }
    lintOptions {
        disable 'GoogleAppIndexingWarning'
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    namespace "com.xly"  //

    compileSdk 34
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "com.xly"
        minSdkVersion 24
        targetSdkVersion 34
        multiDexEnabled false
        versionCode 100
        versionName "1.0.0"
        flavorDimensions "versionCode"
        signingConfig signingConfigs.debug
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true
        /*manifestPlaceholders = [
        ]*/
    }

/*// 在 build.gradle 中添加一个任务
    task updateSchemaVersion {
        doLast {
            def buildFile = file('build.gradle')
            def text = buildFile.getText("UTF-8")
            def timestamp = System.currentTimeMillis()

            // 匹配并替换 schemaVersion 的值
            text = text.replaceAll(/schemaVersion \d+/, "schemaVersion ${timestamp}")

            // 更新 build.gradle 文件
            buildFile.text = text
        }
    }

// 在构建之前执行该任务
    preBuild.dependsOn(updateSchemaVersion)*/
    signingConfigs {
        /*release {
            keyAlias 'jsppnew'
            keyPassword 'jspp2020Ok'
            storeFile file('\\key\\jsppnew.jks')
            storePassword 'jspp2020Ok'
            //签名版本的方式
            v1SigningEnabled true
            v2SigningEnabled true
        }*/
        /* debug {
           keyAlias 'jsppnew'
            keyPassword 'jspp2020Ok'
            storeFile file('\\key\\jsppnew.jks')
            storePassword 'jspp2020Ok'
            //签名版本的方式
            v1SigningEnabled true
            v2SigningEnabled true
        }*/

    }
    /*buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            debuggable = true//设置签名信息
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
        }
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }



    kotlinOptions {
        jvmTarget = "11"
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['src/main/jniLibs', 'libs']
        }

    }

    build {
        productFlavors {
            Alpha {}//自己打包测试使用(全有)
            Oppo {}//投放oppo市场（没有密聊、定时删除、定时发送）
            Xiaomi {}//投放小米市场（没有密聊、定时删除、定时发送、小剧场）
            Huawei {}//投放华为应用市场（没有密聊、密信、定时删除、定时发送）
            Tradplus {}//honor
            Honor{}
            Ali {}//投放PP助手市场(全有)
            //=======================第二波========================================
            Kuaishou {}//快手(全有)
            Douyin {}//抖音(全有)
            Vivo {}//投放vivo市场（没有密聊、定时删除、定时发送）
            KSzhutui {}//Kuaishou助推(全有)
            baidu {}//百度(全有)
            s360 {}//360
            clock {}//时钟

            productFlavors.all { flavor ->
                flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
            }

        }
    }
    //渠道包打开
    applicationVariants.all { variant ->
        variant.outputs.all {

            def date = new Date().format("yyMMdd", TimeZone.getTimeZone("GMT+08:00"))

            // 此处指定生成的apk文件名
            outputFileName = "XLY-" +
                    variant.versionName + "_" +
                    variant.flavorName + "_" +
                    variant.buildType.name +
                    ".apk"
        }
    }
    defaultConfig {

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", /*"x86", */ "arm64-v8a"
        }


    }
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'androidx.core:core:1.5.0'
        implementation 'androidx.media:media:1.0.0'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test.ext:junit:1.1.5'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        androidTestImplementation 'androidx.test:runner:1.5.2'
        androidTestImplementation 'androidx.test:rules:1.5.0'
        implementation 'androidx.appcompat:appcompat:1.3.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
        implementation 'com.google.android.material:material:1.4.0'
        //以下依赖都需要添加
        implementation 'androidx.annotation:annotation:1.1.0'

        //kotlin
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'

        implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
        implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
        implementation 'com.geyifeng.immersionbar:immersionbar-components:3.2.2'
        implementation 'com.squareup.retrofit2:retrofit:2.9.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
        implementation 'androidx.viewpager2:viewpager2:1.0.0'

        implementation 'com.yuyakaido.android:card-stack-view:2.3.4'
        implementation 'androidx.recyclerview:recyclerview:1.3.2'
        implementation 'androidx.cardview:cardview:1.0.0'
        implementation 'com.google.android:flexbox:2.0.1'
        implementation 'com.github.bumptech.glide:glide:4.16.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
        implementation 'com.github.chrisbanes:PhotoView:2.3.0'

        // SmartRefreshLayout 核心库
        implementation 'io.github.scwang90:refresh-layout-kernel:2.0.6'

        implementation 'com.google.android.exoplayer:exoplayer:2.19.1'

        // 各种头部样式（根据需要选择）
        implementation 'io.github.scwang90:refresh-header-classics:2.0.7'      // 经典样式
        implementation 'io.github.scwang90:refresh-header-material:2.0.6'      // Material 样式
        implementation 'io.github.scwang90:refresh-header-radar:2.0.6'         // 雷达样式
        implementation 'io.github.scwang90:refresh-header-falsify:2.0.6'       // 仿苹果样式
        implementation 'io.github.scwang90:refresh-header-two-level:2.0.6'     // 二级刷新

    }
    lint {
        disable 'GoogleAppIndexingWarning'
    }
    namespace 'com.xly'
}
